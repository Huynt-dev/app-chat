[{"/home/huynt/project-app-chat/app-chat/src/App.js":"1","/home/huynt/project-app-chat/app-chat/src/routes/PublicRoute.js":"2","/home/huynt/project-app-chat/app-chat/src/layouts/MainLayout.js":"3","/home/huynt/project-app-chat/app-chat/src/containers/Home/index.js":"4","/home/huynt/project-app-chat/app-chat/src/containers/Login/index.js":"5","/home/huynt/project-app-chat/app-chat/src/layouts/style.js":"6","/home/huynt/project-app-chat/app-chat/src/components/index.js":"7","/home/huynt/project-app-chat/app-chat/src/containers/Login/style.js":"8","/home/huynt/project-app-chat/app-chat/src/components/Menu/style.js":"9","/home/huynt/project-app-chat/app-chat/src/configs/socket.js":"10","/home/huynt/project-app-chat/app-chat/src/theme.js":"11","/home/huynt/project-app-chat/app-chat/src/layouts/index.js":"12","/home/huynt/project-app-chat/app-chat/src/containers/Register/index.js":"13","/home/huynt/project-app-chat/app-chat/src/helpers/axios.js":"14","/home/huynt/project-app-chat/app-chat/src/containers/index.js":"15","/home/huynt/project-app-chat/app-chat/src/components/Menu/index.js":"16"},{"size":267,"mtime":1608560989009,"results":"17","hashOfConfig":"18"},{"size":388,"mtime":1608560989009,"results":"19","hashOfConfig":"18"},{"size":336,"mtime":1609164716301,"results":"20","hashOfConfig":"18"},{"size":2044,"mtime":1609766751311,"results":"21","hashOfConfig":"18"},{"size":2997,"mtime":1609164716301,"results":"22","hashOfConfig":"18"},{"size":169,"mtime":1609164716301,"results":"23","hashOfConfig":"18"},{"size":47,"mtime":1608560989009,"results":"24","hashOfConfig":"18"},{"size":452,"mtime":1609164716301,"results":"25","hashOfConfig":"18"},{"size":377,"mtime":1609164716297,"results":"26","hashOfConfig":"18"},{"size":344,"mtime":1609755479761,"results":"27","hashOfConfig":"18"},{"size":275,"mtime":1609164716301,"results":"28","hashOfConfig":"18"},{"size":106,"mtime":1608560989009,"results":"29","hashOfConfig":"18"},{"size":5182,"mtime":1608560989009,"results":"30","hashOfConfig":"18"},{"size":342,"mtime":1608560989009,"results":"31","hashOfConfig":"18"},{"size":144,"mtime":1608560989009,"results":"32","hashOfConfig":"18"},{"size":2033,"mtime":1609767798601,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1z0zpma",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/huynt/project-app-chat/app-chat/src/App.js",[],"/home/huynt/project-app-chat/app-chat/src/routes/PublicRoute.js",[],["70","71"],"/home/huynt/project-app-chat/app-chat/src/layouts/MainLayout.js",[],"/home/huynt/project-app-chat/app-chat/src/containers/Home/index.js",["72"],"/home/huynt/project-app-chat/app-chat/src/containers/Login/index.js",["73"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { FromA } from \"./style\";\nimport callApi from \"../../helpers/axios\";\n//import { io } from \"socket.io-client\";\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const [userMail, setUserMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [hideLogin, setHideLogin] = useState(true);\n  // const [error, setError] = useState(\"\");\n\n  // const [chat, setChat] = useState();\n\n  // useEffect(() => {\n  // const socket = io(\"http://localhost:9999\");\n  //   if (chat !== null) {\n  //     socket.emit(\"send-data\", chat);\n  //   }\n  // }, [chat]);\n\n  const onFinish = async (values) => {\n    try {\n      // setIsLoading(true);\n      // values.perventDefault();\n      const res = await callApi.post(\"/auth/login\", {\n        email: userMail,\n        password,\n      });\n\n      const { token, user } = res;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      callApi.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      history.push(\"/\");\n    } catch (error) {\n      // setIsLoading(false);\n      // setError(\n      //   \"Rất tiếc, mật khẩu của bạn không đúng. Vui lòng kiểm tra lại mật khẩu.\"\n      // );\n    }\n  };\n\n  return (\n    <FromA\n      name=\"normal_login\"\n      className=\"login-form\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Username!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          type=\"email\"\n          placeholder=\"Username\"\n          onChange={(e) => setUserMail(e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Password!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <a className=\"login-form-forgot\" href=\"\">\n          Forgot password\n        </a>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n        Or <a href=\"/register\">register now!</a>\n      </Form.Item>\n    </FromA>\n  );\n};\n\nexport default LoginPage;\n","/home/huynt/project-app-chat/app-chat/src/layouts/style.js",[],"/home/huynt/project-app-chat/app-chat/src/components/index.js",[],["74","75"],"/home/huynt/project-app-chat/app-chat/src/containers/Login/style.js",[],"/home/huynt/project-app-chat/app-chat/src/components/Menu/style.js",[],"/home/huynt/project-app-chat/app-chat/src/configs/socket.js",[],"/home/huynt/project-app-chat/app-chat/src/theme.js",[],"/home/huynt/project-app-chat/app-chat/src/layouts/index.js",[],"/home/huynt/project-app-chat/app-chat/src/containers/Register/index.js",["76"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport callApi from \"../../helpers/axios\";\nimport { Form, Input, Tooltip, Select, Checkbox, Button } from \"antd\";\nimport { FromA } from \"./style\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nconst { Option } = Select;\n\nconst Register = () => {\n  let history = useHistory();\n  const [form] = Form.useForm();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [nickName, setNickName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n\n  const onFinish = async (values) => {\n    try {\n      await callApi.post(\"/auth/register\", {\n        firstName,\n        lastName,\n        email,\n        nickName,\n        password,\n        gender,\n      });\n\n      history.push(\"/login\");\n    } catch (error) {}\n  };\n\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"84\">+84</Option>\n      </Select>\n    </Form.Item>\n  );\n\n  return (\n    <FromA\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={{\n        prefix: \"84\",\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        label=\"First Name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your nickname!\",\n            whitespace: true,\n          },\n        ]}\n        onChange={(e) => setFirstName(e.target.value)}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Last Name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your nickname!\",\n            whitespace: true,\n          },\n        ]}\n        onChange={(e) => setLastName(e.target.value)}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"nickname\"\n        label={\n          <span>\n            Nickname&nbsp;\n            <Tooltip title=\"What do you want others to call you?\">\n              <QuestionCircleOutlined />\n            </Tooltip>\n          </span>\n        }\n        rules={[\n          {\n            required: true,\n            message: \"Please input your nickname!\",\n            whitespace: true,\n          },\n        ]}\n        onChange={(e) => setNickName(e.target.value)}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n        onChange={(e) => setEmail(e.target.value)}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\",\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={[\"password\"]}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: \"Please confirm your password!\",\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue(\"password\") === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(\n                \"The two passwords that you entered do not match!\"\n              );\n            },\n          }),\n        ]}\n        onChange={(e) => setPassword(e.target.value)}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone Number\"\n        rules={[\n          {\n            message: \"Please input your phone number!\",\n          },\n        ]}\n      >\n        <Input\n          addonBefore={prefixSelector}\n          style={{\n            width: \"100%\",\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"gender\"\n        label=\"Gender\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select placeholder=\"....\" allowClear onSelect={(e) => setGender(e)}>\n          <Option value=\"male\">male</Option>\n          <Option value=\"female\">female</Option>\n          <Option value=\"other\">other</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            validator: (_, value) =>\n              value\n                ? Promise.resolve()\n                : Promise.reject(\"Should accept agreement\"),\n          },\n        ]}\n      >\n        <Checkbox>\n          I have read the <a href=\"\">agreement</a>\n        </Checkbox>\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </FromA>\n  );\n};\n\nexport default Register;\n","/home/huynt/project-app-chat/app-chat/src/helpers/axios.js",[],"/home/huynt/project-app-chat/app-chat/src/containers/index.js",[],"/home/huynt/project-app-chat/app-chat/src/components/Menu/index.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":10,"column":3,"nodeType":"83","messageId":"84","endLine":10,"endColumn":7},{"ruleId":"85","severity":1,"message":"86","line":94,"column":9,"nodeType":"87","endLine":94,"endColumn":50},{"ruleId":"77","replacedBy":"88"},{"ruleId":"79","replacedBy":"89"},{"ruleId":"85","severity":1,"message":"86","line":211,"column":27,"nodeType":"87","endLine":211,"endColumn":38},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Time' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["90"],["91"],"no-global-assign","no-unsafe-negation"]